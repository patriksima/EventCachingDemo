@page "/SalesLogs"
@using EventCachingDemo.Shared.Queries
@inject HttpClient Http

<h3>Sales Logs</h3>

@if (salesLogs == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <form>
        <label>
            Agent:
            <select @bind="@salesAgentId">
                <option value=""></option>
                @foreach (var agent in salesAgents)
                {
                    <option value="@agent.SalesAgentId">@agent.FullName</option>
                }
            </select>
        </label>
    </form>

    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Agent</th>
            <th>Product</th>
            <th>Quantity</th>
            <th>Total</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var salesLog in salesLogs)
        {
            <tr>
                <td>@salesLog.DayOfSale.ToLocalTime()</td>
                <td>@salesLog.SalesAgent</td>
                <td>@salesLog.Product</td>
                <td>@salesLog.Quantity</td>
                <td>@salesLog.Price</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Guid salesAgentId;
    private SalesAgentDto[] salesAgents;

    private SalesLogDto[]? salesLogs;

    protected override async Task OnInitializedAsync()
    {
        salesLogs = await Http.GetFromJsonAsync<SalesLogDto[]>("SalesLogs");
        salesAgents = await Http.GetFromJsonAsync<SalesAgentDto[]>("SalesLogs/Agents");
    }

}