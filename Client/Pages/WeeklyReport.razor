@page "/WeeklyReport"
@using EventCachingDemo.Shared.Queries
@using EventCachingDemo.Shared.Commands

<h3>Weekly Report</h3>

@if (_reports == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Year</th>
            <th>Week</th>
            <th>Best Agent</th>
            <th>Most Sold Product</th>
            <th>Quantity</th>
            <th>Amount</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var report in _reports)
        {
            var salesLogLink = $"/{nameof(SalesLogs)}/{report.Week}";
            <tr>
                <td>@report.Year</td>
                <td>
                    <NavLink href="@salesLogLink">@report.Week</NavLink>
                </td>
                <td>@report.Agent</td>
                <td>@report.MostSoldProduct</td>
                <td>@report.TotalProducts</td>
                <td class="text-end">@report.TotalPrice.ToString("C2")</td>
            </tr>
        }
        </tbody>
    </table>
    <button @onclick="PurgeReport">Purge report</button>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        await LoadReports();
    }

    private async Task LoadReports()
    {
        _reports = await HttpClient.SendAsync(new WeeklyReportQuery());
    }

    private IList<ReportDto>? _reports;

    private async Task PurgeReport(MouseEventArgs arg)
    {
        await HttpClient.SendAsync(new PurgeReportCommand());
        _reports = new List<ReportDto>();
        StateHasChanged();
    }

}