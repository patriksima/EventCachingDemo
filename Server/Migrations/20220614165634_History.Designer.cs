// <auto-generated />
using System;
using EventCachingDemo.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventCachingDemo.Server.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220614165634_History")]
    partial class History
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EventCachingDemo.Server.Models.History", b =>
                {
                    b.Property<Guid>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RequestBody")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("RequestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("4717b008-23e4-4d51-4e6f-a33a4ce6e022"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Practical Soft Chicken",
                            Price = 626.13m
                        },
                        new
                        {
                            ProductId = new Guid("7a54d48d-00c2-3e16-1d94-b953a5a9f7c0"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Rustic Steel Towels",
                            Price = 882.64m
                        },
                        new
                        {
                            ProductId = new Guid("db7e57ac-3a05-3533-8c9a-b61b2188ea5d"),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Name = "Rustic Frozen Towels",
                            Price = 76.81m
                        },
                        new
                        {
                            ProductId = new Guid("114e0dd8-daf5-6d8d-1daa-fe89dd134f81"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Handmade Frozen Computer",
                            Price = 572.39m
                        },
                        new
                        {
                            ProductId = new Guid("ac7a4c2a-5996-7160-893a-cb8e6ab4013d"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Rustic Fresh Pants",
                            Price = 291.69m
                        });
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.Report", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Agent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MostSoldProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SalesAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("TotalProducts")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("SalesAgentId");

                    b.HasIndex("Year", "Week");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.SalesAgent", b =>
                {
                    b.Property<Guid>("SalesAgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SalesDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SalesAgentId");

                    b.HasIndex("SalesDepartmentId");

                    b.ToTable("SalesAgents");

                    b.HasData(
                        new
                        {
                            SalesAgentId = new Guid("51db1456-531d-90fe-f7e7-773bb98c576e"),
                            FirstName = "Annette",
                            LastName = "Monahan",
                            SalesDepartmentId = new Guid("fb00297f-33d1-8188-5686-052d4e187609")
                        },
                        new
                        {
                            SalesAgentId = new Guid("2e95e265-4edc-fe6a-3dba-b836dfd53d51"),
                            FirstName = "Andrew",
                            LastName = "Zieme",
                            SalesDepartmentId = new Guid("2da59147-c328-6bd4-904f-1a35ce4f0e50")
                        },
                        new
                        {
                            SalesAgentId = new Guid("727ab066-6831-fe11-1f8c-168b36ef4cba"),
                            FirstName = "Leah",
                            LastName = "Ritchie",
                            SalesDepartmentId = new Guid("2da59147-c328-6bd4-904f-1a35ce4f0e50")
                        },
                        new
                        {
                            SalesAgentId = new Guid("1f8b3de6-7bcb-dd8b-4b6b-371bdc097435"),
                            FirstName = "Tom",
                            LastName = "Williamson",
                            SalesDepartmentId = new Guid("fb00297f-33d1-8188-5686-052d4e187609")
                        },
                        new
                        {
                            SalesAgentId = new Guid("ff1822a7-9243-a170-b3ee-fc6e14d5ffe5"),
                            FirstName = "Lynette",
                            LastName = "Buckridge",
                            SalesDepartmentId = new Guid("fb00297f-33d1-8188-5686-052d4e187609")
                        },
                        new
                        {
                            SalesAgentId = new Guid("a4c098a5-e6e1-ef27-4b44-acb9779cb5fa"),
                            FirstName = "Tom",
                            LastName = "Klocko",
                            SalesDepartmentId = new Guid("b7859444-ea55-6753-5875-9fc16647ac0a")
                        },
                        new
                        {
                            SalesAgentId = new Guid("fe1c6078-653f-cfaf-8a1e-f04eee10adc2"),
                            FirstName = "Celia",
                            LastName = "O'Kon",
                            SalesDepartmentId = new Guid("fb00297f-33d1-8188-5686-052d4e187609")
                        },
                        new
                        {
                            SalesAgentId = new Guid("3788af9e-8fcf-e960-106e-6806483bf465"),
                            FirstName = "Ramon",
                            LastName = "Jenkins",
                            SalesDepartmentId = new Guid("fb00297f-33d1-8188-5686-052d4e187609")
                        },
                        new
                        {
                            SalesAgentId = new Guid("7c3c96de-2654-d56b-7aea-8f87e18caaf3"),
                            FirstName = "Nelson",
                            LastName = "Littel",
                            SalesDepartmentId = new Guid("b7859444-ea55-6753-5875-9fc16647ac0a")
                        });
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.SalesDepartment", b =>
                {
                    b.Property<Guid>("SalesDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesDepartmentId");

                    b.ToTable("SalesDepartments");

                    b.HasData(
                        new
                        {
                            SalesDepartmentId = new Guid("b7859444-ea55-6753-5875-9fc16647ac0a"),
                            Description = "Voluptatem quisquam non.",
                            Name = "Garden & Movies"
                        },
                        new
                        {
                            SalesDepartmentId = new Guid("fb00297f-33d1-8188-5686-052d4e187609"),
                            Description = "Est et sed.",
                            Name = "Games"
                        },
                        new
                        {
                            SalesDepartmentId = new Guid("0a474c7e-30d0-1313-87f8-f8920b953e36"),
                            Description = "Numquam nisi et.",
                            Name = "Beauty, Jewelery & Toys"
                        },
                        new
                        {
                            SalesDepartmentId = new Guid("2da59147-c328-6bd4-904f-1a35ce4f0e50"),
                            Description = "Labore consectetur totam.",
                            Name = "Music, Industrial & Movies"
                        },
                        new
                        {
                            SalesDepartmentId = new Guid("d4b95ff3-9747-ee48-ff6a-5c6cf61e547d"),
                            Description = "Ut qui et.",
                            Name = "Automotive, Health & Clothing"
                        });
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.SalesLog", b =>
                {
                    b.Property<Guid>("SalesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DayOfSale")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("SalesAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SalesLogId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesAgentId");

                    b.ToTable("SalesLogs");
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.Report", b =>
                {
                    b.HasOne("EventCachingDemo.Server.Models.SalesAgent", "SalesAgent")
                        .WithMany()
                        .HasForeignKey("SalesAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesAgent");
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.SalesAgent", b =>
                {
                    b.HasOne("EventCachingDemo.Server.Models.SalesDepartment", "SalesDepartment")
                        .WithMany("SalesAgents")
                        .HasForeignKey("SalesDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesDepartment");
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.SalesLog", b =>
                {
                    b.HasOne("EventCachingDemo.Server.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventCachingDemo.Server.Models.SalesAgent", "SalesAgent")
                        .WithMany()
                        .HasForeignKey("SalesAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SalesAgent");
                });

            modelBuilder.Entity("EventCachingDemo.Server.Models.SalesDepartment", b =>
                {
                    b.Navigation("SalesAgents");
                });
#pragma warning restore 612, 618
        }
    }
}
